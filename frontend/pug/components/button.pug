mixin button(props = {})

  - let {type='', variant='', tag='button', size='', color='', iconId='', iconBg='', half='', opacity='', borderColor='', otherClasses=''} = props

  - let classList= 'button'

  - if (type != '')
    - classList+= ` button_${type}`

  - if (variant != '')
    - classList+= ` button_${variant}`

  - if (color != '')
    - classList+= ` button_${color}`

  - if (size != '')
    - classList+= ` button_${size}`

  - if (iconBg != '')
    - classList+= ` button_icon_bg_${iconBg}`

  - if (half != '')
    - classList+= ` button_half button_${half}`

  - if (opacity != '')
    - classList+= ` button_opacity_${opacity}`

  - if (borderColor != '')
    - classList+= ` button_border-${borderColor}`

  - if (otherClasses != '')
    - classList+= ` ${otherClasses}`


  case type
    //- when "circle"
    //-   #{tag}(class= classList)&attributes(attributes)
    //-     svg.button__icon
    //-       use(xlink:href= iconId)

    //- when "icon_left"
    //-   #{tag}(class= classList)&attributes(attributes)
    //-     svg.button__icon
    //-       use(xlink:href= iconId)
    //-     span.button__text
    //-       block

    //- when "icon_right"
    //-   #{tag}(class= classList)&attributes(attributes)
    //-     span.button__text
    //-       block
    //-     svg.button__icon
    //-       use(xlink:href= iconId)

    //- when "underlined"
    //-   #{tag}(class= classList)&attributes(attributes)
    //-     span.button__text
    //-       block

    default
      #{tag}(class= classList)&attributes(attributes)
        span.button__text
          block
